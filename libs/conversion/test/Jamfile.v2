#
# Boost.Synchro
# Build script for tests.
#
# Copyright (c) 2008-2009 Vicente J. Botet Escriba]
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

using testing ;

if ! $(BOOST_ROOT)
{
    BOOST_ROOT = [ modules.peek : BOOST_ROOT ] ;
}

# bjam -V2 threading=multi target-os=cygwin threadapi=pthread variant=debug

project :
    : requirements
#        <include>$BOOST_ROOT
        <include>../../..
        <include>../../../../chrono
        
#        <threading>multi
#        <target-os>cygwin
        #<threadapi>pthread
#        <variant>debug
        
        #<library>/boost/thread//boost_thread/<link>static
        <library>/sandbox/chrono/libs/chrono/build//boost_chrono/<link>static
        <library>/boost/system//boost_system/<link>static
        
        <library>/boost/test//boost_unit_test_framework/<link>static
      
;



     
test-suite "conversion" :
     [ run builtins.cpp ]
     [ run intrinsec.cpp ]
     [ run extrinsec.cpp ]
     [ run pair.cpp ]
     [ run complex.cpp ]
     [ run interval.cpp ]
     [ run rational.cpp ]
     [ run optional.cpp ]
     [ run array.cpp ]
     [ run tuple.cpp ]
     [ run chrono_posix_time_time.cpp ]
     [ run chrono_posix_time_duration.cpp ]
    ; 


test-suite "compile_fail_test"  :
#    [ compile-fail ../example/IL_BancAccount.cpp : : <define>BOOST_SYNCHRO_DO_NOT_COMPILE  : IL_BancAccount_comp_fail ]
    ;
    
